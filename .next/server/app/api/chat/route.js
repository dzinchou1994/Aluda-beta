"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/chat/route";
exports.ids = ["app/api/chat/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("querystring");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fjincho%2FDocuments%2FAluda%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjincho%2FDocuments%2FAluda&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fjincho%2FDocuments%2FAluda%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjincho%2FDocuments%2FAluda&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var _Users_jincho_Documents_Aluda_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/api/chat/route.ts */ \"(rsc)/./app/api/chat/route.ts\");\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/chat/route\",\n        pathname: \"/api/chat\",\n        filename: \"route\",\n        bundlePath: \"app/api/chat/route\"\n    },\n    resolvedPagePath: \"/Users/jincho/Documents/Aluda/app/api/chat/route.ts\",\n    nextConfigOutput,\n    userland: _Users_jincho_Documents_Aluda_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_2__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/chat/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjaGF0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZjaGF0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY2hhdCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmppbmNobyUyRkRvY3VtZW50cyUyRkFsdWRhJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmppbmNobyUyRkRvY3VtZW50cyUyRkFsdWRhJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNpQjtBQUNoRjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNpSjs7QUFFakoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbHVkYS1haS8/NGEzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvamluY2hvL0RvY3VtZW50cy9BbHVkYS9hcHAvYXBpL2NoYXQvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2NoYXQvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jaGF0XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9jaGF0L3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL2ppbmNoby9Eb2N1bWVudHMvQWx1ZGEvYXBwL2FwaS9jaGF0L3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2NoYXQvcm91dGVcIjtcbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fjincho%2FDocuments%2FAluda%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjincho%2FDocuments%2FAluda&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/chat/route.ts":
/*!*******************************!*\
  !*** ./app/api/chat/route.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OPTIONS: () => (/* binding */ OPTIONS),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_flowise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/flowise */ \"(rsc)/./lib/flowise.ts\");\n/* harmony import */ var _lib_rateLimit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/rateLimit */ \"(rsc)/./lib/rateLimit.ts\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-auth */ \"(rsc)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./lib/auth.ts\");\n/* harmony import */ var _lib_session__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/session */ \"(rsc)/./lib/session.ts\");\n/* harmony import */ var _lib_tokens__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/lib/tokens */ \"(rsc)/./lib/tokens.ts\");\n\n\n\n\n\n\n\n// import { suggestTitleWithGroq } from \"@/lib/groq\"\nconst runtime = \"nodejs\";\nasync function POST(request) {\n    try {\n        // Basic rate limit by IP\n        await (0,_lib_rateLimit__WEBPACK_IMPORTED_MODULE_2__.rateLimit)({\n            key: `chat_${request.ip || \"unknown\"}`,\n            windowMs: 10000,\n            max: 30\n        });\n        const contentType = request.headers.get(\"content-type\") || \"\";\n        let message = \"\";\n        let chatId;\n        let model;\n        let uploadedFile = null;\n        if (contentType.includes(\"multipart/form-data\")) {\n            const form = await request.formData();\n            // Support both our field names and Flowise chatbot-style 'question'\n            message = String(form.get(\"message\") || form.get(\"question\") || \"\");\n            chatId = form.get(\"chatId\") ? String(form.get(\"chatId\")) : undefined;\n            model = form.get(\"model\") ? String(form.get(\"model\")) : undefined;\n            // Flowise expects 'files' for prediction multipart\n            const f = form.get(\"files\") || form.get(\"file\") || form.get(\"upload\") || form.get(\"image\") || form.get(\"images\") || form.get(\"files[]\");\n            if (f instanceof File) {\n                uploadedFile = f;\n            }\n            console.log(\"API multipart debug:\", {\n                contentType,\n                hasFile: Boolean(uploadedFile),\n                fileName: uploadedFile?.name,\n                fileSize: uploadedFile?.size,\n                fileType: uploadedFile?.type,\n                model\n            });\n        } else {\n            const json = await request.json();\n            message = json?.message || \"\";\n            chatId = json?.chatId;\n            model = json?.model;\n        }\n        if (!message?.trim() && !uploadedFile) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"შეტყობინება ან სურათი საჭიროა\"\n            }, {\n                status: 400\n            });\n        }\n        // Identify actor\n        const session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_3__.getServerSession)(_lib_auth__WEBPACK_IMPORTED_MODULE_4__.authOptions);\n        const cookieSess = (0,_lib_session__WEBPACK_IMPORTED_MODULE_5__.getOrCreateSession)();\n        const actor = session?.user?.id ? {\n            type: \"user\",\n            id: session.user.id,\n            plan: \"USER\"\n        } : {\n            type: \"guest\",\n            id: cookieSess.guestId || cookieSess.sessionId\n        };\n        // Model handling: 'mini' (default) or 'aluda2'\n        const selectedModel = model === \"aluda2\" ? \"aluda2\" : \"mini\";\n        // Premium users default to aluda2 without extra token multiplier\n        const isPremium = false // TODO: read from DB when plan is enabled\n        ;\n        const tokenMultiplier = selectedModel === \"aluda2\" && !isPremium && actor.type !== \"guest\" ? 5 : 1;\n        // Guests cannot use aluda2\n        if (actor.type === \"guest\" && selectedModel === \"aluda2\") {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"გაიარეთ ავტორიზაცია Aluda 2.0-ისთვის\",\n                redirect: \"/auth/signin\"\n            }, {\n                status: 402\n            });\n        }\n        // Rough token estimate (chars/4)\n        const estimatedTokens = Math.ceil((message?.length || 0) / 4) * tokenMultiplier;\n        const { allowed, limits, usage } = await (0,_lib_tokens__WEBPACK_IMPORTED_MODULE_6__.canConsume)(actor, estimatedTokens);\n        if (!allowed) {\n            const target = actor.type === \"guest\" ? \"/auth/signin\" : \"/buy\";\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"ტოკენების ლიმიტი ამოიწურა\",\n                redirect: target,\n                limits,\n                usage\n            }, {\n                status: 402\n            });\n        }\n        // Generate a simple chat ID if none provided\n        const currentChatId = chatId || `chat_${Date.now()}`;\n        // Send to Flowise\n        const startTime = Date.now();\n        let flowiseResponse;\n        try {\n            // Choose chatflow by model\n            const chatflowIdOverride = selectedModel === \"aluda2\" ? process.env.ALUDAAI_FLOWISE_CHATFLOW_ID_ALUDAA2 : undefined;\n            const effectiveMessage = message && message.trim().length > 0 ? message : \"გთხოვ გამიწოდე ანალიზი ატვირთული სურათის შესახებ\";\n            flowiseResponse = await (0,_lib_flowise__WEBPACK_IMPORTED_MODULE_1__.sendToFlowiseWithRetry)({\n                message: effectiveMessage,\n                history: [],\n                sessionId: currentChatId,\n                chatflowIdOverride,\n                file: selectedModel === \"aluda2\" ? uploadedFile : undefined\n            });\n        } catch (error) {\n            console.error(\"Flowise API error:\", error);\n            console.error(\"Flowise context:\", {\n                hasFile: Boolean(uploadedFile),\n                contentType,\n                selectedModel\n            });\n            // Fallback response\n            flowiseResponse = {\n                text: \"ბოდიში, ამ მომენტში ვერ შეგიძლიათ მიმართოთ. გთხოვთ სცადოთ მოგვიანებით.\"\n            };\n        }\n        // Log telemetry\n        const duration = Date.now() - startTime;\n        console.log(\"Telemetry:\", {\n            timestamp: new Date().toISOString(),\n            sessionId: currentChatId,\n            chatId: currentChatId,\n            duration,\n            status: \"success\"\n        });\n        // Estimate assistant tokens as well\n        const assistantTokens = Math.ceil((flowiseResponse.text?.length || 0) / 4) * tokenMultiplier;\n        await (0,_lib_tokens__WEBPACK_IMPORTED_MODULE_6__.addUsage)(actor, estimatedTokens + assistantTokens);\n        // Try to suggest a concise chat title via Flowise (best-effort)\n        let aiTitle;\n        try {\n            aiTitle = await (0,_lib_flowise__WEBPACK_IMPORTED_MODULE_1__.suggestTitleWithFlowise)({\n                question: message,\n                sessionId: currentChatId,\n                chatflowIdOverride: undefined\n            }) || undefined;\n        } catch  {}\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            text: flowiseResponse.text,\n            sources: flowiseResponse.sources,\n            chatId: currentChatId,\n            aiTitle\n        });\n    } catch (error) {\n        console.error(\"Chat API error:\", error);\n        const message = error?.message || \"Server error\";\n        const status = error?.status || 500;\n        const payload = {\n            error: message\n        };\n        if (error?.retryAfter) payload.retryAfter = error.retryAfter;\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(payload, {\n            status\n        });\n    }\n}\nasync function OPTIONS() {\n    return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](null, {\n        status: 200,\n        headers: {\n            \"Access-Control-Allow-Origin\": process.env.NEXTAUTH_URL || \"http://localhost:3000\",\n            \"Access-Control-Allow-Methods\": \"POST, OPTIONS\",\n            \"Access-Control-Allow-Headers\": \"Content-Type\",\n            \"Access-Control-Allow-Credentials\": \"true\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/chat/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions)\n/* harmony export */ });\n/* harmony import */ var next_auth_providers_google__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/providers/google */ \"(rsc)/./node_modules/next-auth/providers/google.js\");\n/* harmony import */ var next_auth_providers_apple__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/apple */ \"(rsc)/./node_modules/next-auth/providers/apple.js\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(rsc)/./node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var _auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @auth/prisma-adapter */ \"(rsc)/./node_modules/@auth/prisma-adapter/index.js\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./lib/prisma.ts\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n\n\n\n\n\n\nconst providers = [];\n// Google: prefer standard envs, fallback to ALUDAAI_* if present\nconst googleClientId = process.env.GOOGLE_CLIENT_ID || process.env.ALUDAAI_GOOGLE_CLIENT_ID;\nconst googleClientSecret = process.env.GOOGLE_CLIENT_SECRET || process.env.ALUDAAI_GOOGLE_CLIENT_SECRET;\nif (googleClientId && googleClientSecret) {\n    providers.push((0,next_auth_providers_google__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        clientId: googleClientId,\n        clientSecret: googleClientSecret\n    }));\n}\n// Apple: support token or key-based secret; prefer standard envs\nconst appleId = process.env.APPLE_ID || process.env.ALUDAAI_APPLE_ID;\nconst appleSecret = process.env.APPLE_SECRET || process.env.ALUDAAI_APPLE_SECRET;\nconst applePrivateKey = process.env.APPLE_PRIVATE_KEY || process.env.ALUDAAI_APPLE_PRIVATE_KEY;\nconst appleKeyId = process.env.APPLE_KEY_ID || process.env.ALUDAAI_APPLE_KEY_ID;\nconst appleTeamId = process.env.APPLE_TEAM_ID || process.env.ALUDAAI_APPLE_TEAM_ID;\nif (appleId && (appleSecret || applePrivateKey && appleKeyId && appleTeamId)) {\n    const useKeyBased = Boolean(applePrivateKey && appleKeyId && appleTeamId);\n    providers.push((0,next_auth_providers_apple__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(useKeyBased ? {\n        clientId: appleId,\n        clientSecret: {\n            privateKey: String(applePrivateKey).replace(/\\\\n/g, \"\\n\"),\n            keyId: appleKeyId,\n            teamId: appleTeamId\n        }\n    } : {\n        clientId: appleId,\n        clientSecret: appleSecret\n    }));\n}\n// Credentials (always enabled)\nproviders.push((0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n    name: \"credentials\",\n    credentials: {\n        email: {\n            label: \"Email\",\n            type: \"email\"\n        },\n        password: {\n            label: \"Password\",\n            type: \"password\"\n        }\n    },\n    async authorize (credentials) {\n        if (!credentials?.email || !credentials?.password) {\n            return null;\n        }\n        const user = await _lib_prisma__WEBPACK_IMPORTED_MODULE_4__.prisma.user.findUnique({\n            where: {\n                email: credentials.email.toLowerCase()\n            }\n        });\n        if (!user || !user.password) {\n            return null;\n        }\n        const valid = await bcryptjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"].compare(credentials.password, user.password);\n        if (!valid) return null;\n        return {\n            id: user.id,\n            name: user.name || user.username || undefined,\n            email: user.email || undefined\n        };\n    }\n}));\nconst authOptions = {\n    adapter: (0,_auth_prisma_adapter__WEBPACK_IMPORTED_MODULE_3__.PrismaAdapter)(_lib_prisma__WEBPACK_IMPORTED_MODULE_4__.prisma),\n    providers,\n    session: {\n        strategy: \"jwt\"\n    },\n    pages: {\n        signIn: \"/auth/signin\"\n    },\n    callbacks: {\n        async jwt ({ token, user }) {\n            if (user) {\n                token.id = user.id;\n                token.name = user.name;\n                token.email = user.email;\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (token) {\n                // @ts-expect-error - augment via types/next-auth.d.ts\n                session.user.id = token.id;\n                session.user.name = token.name;\n                session.user.email = token.email;\n            }\n            return session;\n        }\n    },\n    jwt: {\n        secret: process.env.NEXTAUTH_SECRET || process.env.ALUDAAI_NEXTAUTH_SECRET\n    },\n    secret: process.env.NEXTAUTH_SECRET || process.env.ALUDAAI_NEXTAUTH_SECRET,\n    debug: \"development\" === \"development\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./lib/flowise.ts":
/*!************************!*\
  !*** ./lib/flowise.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendToFlowise: () => (/* binding */ sendToFlowise),\n/* harmony export */   sendToFlowiseWithRetry: () => (/* binding */ sendToFlowiseWithRetry),\n/* harmony export */   suggestTitleWithFlowise: () => (/* binding */ suggestTitleWithFlowise)\n/* harmony export */ });\n/**\n * Send a message to Flowise via direct API\n */ async function sendToFlowise({ message, history, sessionId, chatflowIdOverride, file }) {\n    // Read Flowise configuration from environment\n    const flowiseHost = process.env.ALUDAAI_FLOWISE_HOST;\n    const chatflowId = chatflowIdOverride || process.env.ALUDAAI_FLOWISE_CHATFLOW_ID;\n    const apiKey = process.env.ALUDAAI_FLOWISE_API_KEY;\n    if (!flowiseHost || !chatflowId) {\n        throw new Error(\"Flowise configuration missing\");\n    }\n    const predictionUrl = `${flowiseHost}/api/v1/prediction/${chatflowId}`;\n    const chatbotUrl = `${flowiseHost}/api/v1/chatbot/${chatflowId}`;\n    const headers = {};\n    if (apiKey) {\n        headers[\"Authorization\"] = `Bearer ${apiKey}`;\n    }\n    const requestBody = {\n        question: message,\n        history,\n        overrideConfig: {\n            sessionId\n        }\n    };\n    try {\n        const isMultipart = Boolean(file);\n        let response;\n        if (isMultipart) {\n            const form = new FormData();\n            form.append(\"question\", requestBody.question);\n            if (file) {\n                const filename = file?.name || \"upload\";\n                // @ts-ignore\n                form.append(\"files\", file, filename);\n            }\n            // Try chatbot endpoint first (like widget), then fallback to prediction with same form\n            response = await fetch(chatbotUrl, {\n                method: \"POST\",\n                headers,\n                body: form,\n                signal: AbortSignal.timeout(30000)\n            });\n            if (!response.ok) {\n                const errText = await response.text().catch(()=>\"\");\n                console.warn(\"Chatbot endpoint failed:\", response.status, errText?.slice(0, 200));\n                const backup = await fetch(predictionUrl, {\n                    method: \"POST\",\n                    headers,\n                    body: form,\n                    signal: AbortSignal.timeout(30000)\n                });\n                response = backup;\n            }\n        } else {\n            response = await fetch(predictionUrl, {\n                method: \"POST\",\n                headers: {\n                    ...headers,\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(requestBody),\n                signal: AbortSignal.timeout(30000)\n            });\n        }\n        if (!response.ok) {\n            if (response.status === 429) {\n                throw new Error(\"Rate limit exceeded. Please try again later.\");\n            }\n            const errorText = await response.text();\n            console.error(\"Flowise non-OK:\", response.status, errorText?.slice(0, 400));\n            let errorData;\n            try {\n                errorData = JSON.parse(errorText);\n            } catch  {\n                errorData = {\n                    error: \"Request failed\",\n                    message: `HTTP ${response.status}: ${errorText}`,\n                    statusCode: response.status\n                };\n            }\n            throw new Error(errorData.message || `HTTP ${response.status}`);\n        }\n        const data = await response.json();\n        // Extract the text response from Flowise\n        const text = data.text || data.response || data.answer || data.message || \"No response received\";\n        return {\n            text,\n            sources: data.sources || data.documents || [],\n            ...data\n        };\n    } catch (error) {\n        if (error instanceof Error) {\n            if (error.name === \"AbortError\") {\n                throw new Error(\"Request timeout. Please try again.\");\n            }\n            throw error;\n        }\n        throw new Error(\"An unexpected error occurred\");\n    }\n}\n/**\n * Retry wrapper for Flowise API calls\n */ async function sendToFlowiseWithRetry(params, maxRetries = 2) {\n    let lastError;\n    for(let attempt = 1; attempt <= maxRetries; attempt++){\n        try {\n            return await sendToFlowise(params);\n        } catch (error) {\n            lastError = error instanceof Error ? error : new Error(\"Unknown error\");\n            if (attempt === maxRetries) {\n                break;\n            }\n            // Wait before retrying (exponential backoff)\n            const delay = Math.min(1000 * Math.pow(2, attempt - 1), 5000);\n            await new Promise((resolve)=>setTimeout(resolve, delay));\n        }\n    }\n    throw lastError;\n}\n/**\n * Ask Flowise to suggest a very short chat title for a given question.\n * Best-effort: returns null on failure.\n */ async function suggestTitleWithFlowise({ question, sessionId, chatflowIdOverride }) {\n    try {\n        const prompt = [\n            \"You are a title generator. Generate a very short, human-friendly topic title based on the following user question.\",\n            \"Return ONLY the title. No quotes. No extra words. Prefer 1-4 words like a folder name.\",\n            `Question: ${question}`\n        ].join(\"\\n\");\n        const res = await sendToFlowiseWithRetry({\n            message: prompt,\n            history: [],\n            sessionId: `${sessionId}_title`,\n            chatflowIdOverride\n        });\n        const raw = (res.text || \"\").trim();\n        if (!raw) return null;\n        // remove surrounding quotes if any\n        const cleaned = raw.replace(/^\"|\"$/g, \"\");\n        return cleaned;\n    } catch  {\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/flowise.ts\n");

/***/ }),

/***/ "(rsc)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst databaseUrl = process.env.DATABASE_URL || process.env.ALUDAAI_DATABASE_URL;\nconst prismaOptions = databaseUrl ? {\n    datasources: {\n        db: {\n            url: databaseUrl\n        }\n    }\n} : {};\nconst prisma = global.prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient(prismaOptions);\nif (true) global.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvcHJpc21hLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQU83QyxNQUFNQyxjQUFjQyxRQUFRQyxHQUFHLENBQUNDLFlBQVksSUFBSUYsUUFBUUMsR0FBRyxDQUFDRSxvQkFBb0I7QUFDaEYsTUFBTUMsZ0JBQWdCTCxjQUNqQjtJQUFFTSxhQUFhO1FBQUVDLElBQUk7WUFBRUMsS0FBS1I7UUFBWTtJQUFFO0FBQUUsSUFDNUMsQ0FBQztBQUVDLE1BQU1TLFNBQVNDLE9BQU9ELE1BQU0sSUFBSSxJQUFJVix3REFBWUEsQ0FBQ00sZUFBcUI7QUFFN0UsSUFBSUosSUFBeUIsRUFBY1MsT0FBT0QsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2FsdWRhLWFpLy4vbGliL3ByaXNtYS50cz85ODIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50J1xuXG5kZWNsYXJlIGdsb2JhbCB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby12YXJcbiAgdmFyIHByaXNtYTogUHJpc21hQ2xpZW50IHwgdW5kZWZpbmVkXG59XG5cbmNvbnN0IGRhdGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuREFUQUJBU0VfVVJMIHx8IHByb2Nlc3MuZW52LkFMVURBQUlfREFUQUJBU0VfVVJMXG5jb25zdCBwcmlzbWFPcHRpb25zID0gZGF0YWJhc2VVcmxcbiAgPyAoeyBkYXRhc291cmNlczogeyBkYjogeyB1cmw6IGRhdGFiYXNlVXJsIH0gfSB9IGFzIGNvbnN0KVxuICA6ICh7fSBhcyBjb25zdClcblxuZXhwb3J0IGNvbnN0IHByaXNtYSA9IGdsb2JhbC5wcmlzbWEgfHwgbmV3IFByaXNtYUNsaWVudChwcmlzbWFPcHRpb25zIGFzIGFueSlcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbC5wcmlzbWEgPSBwcmlzbWFcblxuXG4iXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwiZGF0YWJhc2VVcmwiLCJwcm9jZXNzIiwiZW52IiwiREFUQUJBU0VfVVJMIiwiQUxVREFBSV9EQVRBQkFTRV9VUkwiLCJwcmlzbWFPcHRpb25zIiwiZGF0YXNvdXJjZXMiLCJkYiIsInVybCIsInByaXNtYSIsImdsb2JhbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/prisma.ts\n");

/***/ }),

/***/ "(rsc)/./lib/rateLimit.ts":
/*!**************************!*\
  !*** ./lib/rateLimit.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rateLimit: () => (/* binding */ rateLimit)\n/* harmony export */ });\nconst memoryStore = new Map();\nasync function rateLimit({ key, windowMs, max }) {\n    const now = Date.now();\n    const entry = memoryStore.get(key);\n    if (!entry || entry.expiresAt < now) {\n        memoryStore.set(key, {\n            count: 1,\n            expiresAt: now + windowMs\n        });\n        return;\n    }\n    if (entry.count >= max) {\n        const retryAfter = Math.max(0, Math.ceil((entry.expiresAt - now) / 1000));\n        const err = new Error(\"Too many requests\");\n        err.status = 429;\n        err.retryAfter = retryAfter;\n        throw err;\n    }\n    entry.count += 1;\n    memoryStore.set(key, entry);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvcmF0ZUxpbWl0LnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFLQSxNQUFNQSxjQUF1QyxJQUFJQztBQUUxQyxlQUFlQyxVQUFVLEVBQUVDLEdBQUcsRUFBRUMsUUFBUSxFQUFFQyxHQUFHLEVBQWtEO0lBQ3BHLE1BQU1DLE1BQU1DLEtBQUtELEdBQUc7SUFDcEIsTUFBTUUsUUFBUVIsWUFBWVMsR0FBRyxDQUFDTjtJQUM5QixJQUFJLENBQUNLLFNBQVNBLE1BQU1FLFNBQVMsR0FBR0osS0FBSztRQUNuQ04sWUFBWVcsR0FBRyxDQUFDUixLQUFLO1lBQUVTLE9BQU87WUFBR0YsV0FBV0osTUFBTUY7UUFBUztRQUMzRDtJQUNGO0lBQ0EsSUFBSUksTUFBTUksS0FBSyxJQUFJUCxLQUFLO1FBQ3RCLE1BQU1RLGFBQWFDLEtBQUtULEdBQUcsQ0FBQyxHQUFHUyxLQUFLQyxJQUFJLENBQUMsQ0FBQ1AsTUFBTUUsU0FBUyxHQUFHSixHQUFFLElBQUs7UUFDbkUsTUFBTVUsTUFBVyxJQUFJQyxNQUFNO1FBQzNCRCxJQUFJRSxNQUFNLEdBQUc7UUFDYkYsSUFBSUgsVUFBVSxHQUFHQTtRQUNqQixNQUFNRztJQUNSO0lBQ0FSLE1BQU1JLEtBQUssSUFBSTtJQUNmWixZQUFZVyxHQUFHLENBQUNSLEtBQUtLO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWx1ZGEtYWkvLi9saWIvcmF0ZUxpbWl0LnRzPzI1ZmYiXSwic291cmNlc0NvbnRlbnQiOlsidHlwZSBTdG9yZUVudHJ5ID0ge1xuICBjb3VudDogbnVtYmVyXG4gIGV4cGlyZXNBdDogbnVtYmVyXG59XG5cbmNvbnN0IG1lbW9yeVN0b3JlOiBNYXA8c3RyaW5nLCBTdG9yZUVudHJ5PiA9IG5ldyBNYXAoKVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmF0ZUxpbWl0KHsga2V5LCB3aW5kb3dNcywgbWF4IH06IHsga2V5OiBzdHJpbmc7IHdpbmRvd01zOiBudW1iZXI7IG1heDogbnVtYmVyIH0pIHtcbiAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKVxuICBjb25zdCBlbnRyeSA9IG1lbW9yeVN0b3JlLmdldChrZXkpXG4gIGlmICghZW50cnkgfHwgZW50cnkuZXhwaXJlc0F0IDwgbm93KSB7XG4gICAgbWVtb3J5U3RvcmUuc2V0KGtleSwgeyBjb3VudDogMSwgZXhwaXJlc0F0OiBub3cgKyB3aW5kb3dNcyB9KVxuICAgIHJldHVyblxuICB9XG4gIGlmIChlbnRyeS5jb3VudCA+PSBtYXgpIHtcbiAgICBjb25zdCByZXRyeUFmdGVyID0gTWF0aC5tYXgoMCwgTWF0aC5jZWlsKChlbnRyeS5leHBpcmVzQXQgLSBub3cpIC8gMTAwMCkpXG4gICAgY29uc3QgZXJyOiBhbnkgPSBuZXcgRXJyb3IoJ1RvbyBtYW55IHJlcXVlc3RzJylcbiAgICBlcnIuc3RhdHVzID0gNDI5XG4gICAgZXJyLnJldHJ5QWZ0ZXIgPSByZXRyeUFmdGVyXG4gICAgdGhyb3cgZXJyXG4gIH1cbiAgZW50cnkuY291bnQgKz0gMVxuICBtZW1vcnlTdG9yZS5zZXQoa2V5LCBlbnRyeSlcbn1cblxuXG4iXSwibmFtZXMiOlsibWVtb3J5U3RvcmUiLCJNYXAiLCJyYXRlTGltaXQiLCJrZXkiLCJ3aW5kb3dNcyIsIm1heCIsIm5vdyIsIkRhdGUiLCJlbnRyeSIsImdldCIsImV4cGlyZXNBdCIsInNldCIsImNvdW50IiwicmV0cnlBZnRlciIsIk1hdGgiLCJjZWlsIiwiZXJyIiwiRXJyb3IiLCJzdGF0dXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/rateLimit.ts\n");

/***/ }),

/***/ "(rsc)/./lib/session.ts":
/*!************************!*\
  !*** ./lib/session.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearSessionCookie: () => (/* binding */ clearSessionCookie),\n/* harmony export */   createSessionCookie: () => (/* binding */ createSessionCookie),\n/* harmony export */   generateSessionId: () => (/* binding */ generateSessionId),\n/* harmony export */   getOrCreateSession: () => (/* binding */ getOrCreateSession),\n/* harmony export */   getSessionFromCookie: () => (/* binding */ getSessionFromCookie),\n/* harmony export */   updateSessionWithUser: () => (/* binding */ updateSessionWithUser)\n/* harmony export */ });\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/headers.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_headers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/v4.js\");\n\n\nconst SESSION_COOKIE_NAME = \"aluda_session\";\nconst SESSION_DURATION_DAYS = 7;\n/**\n * Generate a new session ID\n */ function generateSessionId() {\n    return (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n}\n/**\n * Create a new session cookie\n */ function createSessionCookie(sessionId, userId, guestId) {\n    const expiresAt = new Date();\n    expiresAt.setDate(expiresAt.getDate() + SESSION_DURATION_DAYS);\n    const cookieStore = (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n    cookieStore.set(SESSION_COOKIE_NAME, JSON.stringify({\n        sessionId,\n        userId,\n        guestId,\n        expiresAt: expiresAt.toISOString()\n    }), {\n        httpOnly: true,\n        secure: \"development\" === \"production\",\n        sameSite: \"lax\",\n        expires: expiresAt,\n        path: \"/\"\n    });\n}\n/**\n * Get session data from cookie\n */ function getSessionFromCookie() {\n    try {\n        const cookieStore = (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n        const sessionCookie = cookieStore.get(SESSION_COOKIE_NAME);\n        if (!sessionCookie?.value) {\n            return null;\n        }\n        const sessionData = JSON.parse(sessionCookie.value);\n        // Check if session has expired\n        if (new Date(sessionData.expiresAt) < new Date()) {\n            // Clear expired cookie\n            cookieStore.delete(SESSION_COOKIE_NAME);\n            return null;\n        }\n        return sessionData;\n    } catch (error) {\n        console.error(\"Error parsing session cookie:\", error);\n        return null;\n    }\n}\n/**\n * Clear session cookie\n */ function clearSessionCookie() {\n    const cookieStore = (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n    cookieStore.delete(SESSION_COOKIE_NAME);\n}\n/**\n * Get or create a session for the current request\n */ function getOrCreateSession() {\n    let sessionData = getSessionFromCookie();\n    if (!sessionData) {\n        // Create new guest session\n        const sessionId = generateSessionId();\n        const guestId = (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n        sessionData = {\n            sessionId,\n            guestId,\n            expiresAt: new Date(Date.now() + SESSION_DURATION_DAYS * 24 * 60 * 60 * 1000)\n        };\n        createSessionCookie(sessionId, undefined, guestId);\n    }\n    return sessionData;\n}\n/**\n * Update session with user ID after authentication\n */ function updateSessionWithUser(sessionId, userId) {\n    const sessionData = getSessionFromCookie();\n    if (sessionData && sessionData.sessionId === sessionId) {\n        createSessionCookie(sessionId, userId, sessionData.guestId);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc2Vzc2lvbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBdUM7QUFDSDtBQVNwQyxNQUFNRyxzQkFBc0I7QUFDNUIsTUFBTUMsd0JBQXdCO0FBRTlCOztDQUVDLEdBQ00sU0FBU0M7SUFDZCxPQUFPSCxnREFBTUE7QUFDZjtBQUVBOztDQUVDLEdBQ00sU0FBU0ksb0JBQW9CQyxTQUFpQixFQUFFQyxNQUFlLEVBQUVDLE9BQWdCO0lBQ3RGLE1BQU1DLFlBQVksSUFBSUM7SUFDdEJELFVBQVVFLE9BQU8sQ0FBQ0YsVUFBVUcsT0FBTyxLQUFLVDtJQUV4QyxNQUFNVSxjQUFjZCxxREFBT0E7SUFDM0JjLFlBQVlDLEdBQUcsQ0FBQ1oscUJBQXFCYSxLQUFLQyxTQUFTLENBQUM7UUFDbERWO1FBQ0FDO1FBQ0FDO1FBQ0FDLFdBQVdBLFVBQVVRLFdBQVc7SUFDbEMsSUFBSTtRQUNGQyxVQUFVO1FBQ1ZDLFFBQVFDLGtCQUF5QjtRQUNqQ0MsVUFBVTtRQUNWQyxTQUFTYjtRQUNUYyxNQUFNO0lBQ1I7QUFDRjtBQUVBOztDQUVDLEdBQ00sU0FBU0M7SUFDZCxJQUFJO1FBQ0YsTUFBTVgsY0FBY2QscURBQU9BO1FBQzNCLE1BQU0wQixnQkFBZ0JaLFlBQVlhLEdBQUcsQ0FBQ3hCO1FBRXRDLElBQUksQ0FBQ3VCLGVBQWVFLE9BQU87WUFDekIsT0FBTztRQUNUO1FBRUEsTUFBTUMsY0FBMkJiLEtBQUtjLEtBQUssQ0FBQ0osY0FBY0UsS0FBSztRQUUvRCwrQkFBK0I7UUFDL0IsSUFBSSxJQUFJakIsS0FBS2tCLFlBQVluQixTQUFTLElBQUksSUFBSUMsUUFBUTtZQUNoRCx1QkFBdUI7WUFDdkJHLFlBQVlpQixNQUFNLENBQUM1QjtZQUNuQixPQUFPO1FBQ1Q7UUFFQSxPQUFPMEI7SUFDVCxFQUFFLE9BQU9HLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLGlDQUFpQ0E7UUFDL0MsT0FBTztJQUNUO0FBQ0Y7QUFFQTs7Q0FFQyxHQUNNLFNBQVNFO0lBQ2QsTUFBTXBCLGNBQWNkLHFEQUFPQTtJQUMzQmMsWUFBWWlCLE1BQU0sQ0FBQzVCO0FBQ3JCO0FBRUE7O0NBRUMsR0FDTSxTQUFTZ0M7SUFDZCxJQUFJTixjQUFjSjtJQUVsQixJQUFJLENBQUNJLGFBQWE7UUFDaEIsMkJBQTJCO1FBQzNCLE1BQU10QixZQUFZRjtRQUNsQixNQUFNSSxVQUFVUCxnREFBTUE7UUFFdEIyQixjQUFjO1lBQ1p0QjtZQUNBRTtZQUNBQyxXQUFXLElBQUlDLEtBQUtBLEtBQUt5QixHQUFHLEtBQUtoQyx3QkFBd0IsS0FBSyxLQUFLLEtBQUs7UUFDMUU7UUFFQUUsb0JBQW9CQyxXQUFXOEIsV0FBVzVCO0lBQzVDO0lBRUEsT0FBT29CO0FBQ1Q7QUFFQTs7Q0FFQyxHQUNNLFNBQVNTLHNCQUFzQi9CLFNBQWlCLEVBQUVDLE1BQWM7SUFDckUsTUFBTXFCLGNBQWNKO0lBRXBCLElBQUlJLGVBQWVBLFlBQVl0QixTQUFTLEtBQUtBLFdBQVc7UUFDdERELG9CQUFvQkMsV0FBV0MsUUFBUXFCLFlBQVlwQixPQUFPO0lBQzVEO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbHVkYS1haS8uL2xpYi9zZXNzaW9uLnRzPzFkZTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29va2llcyB9IGZyb20gJ25leHQvaGVhZGVycyc7XG5pbXBvcnQgeyB2NCBhcyB1dWlkdjQgfSBmcm9tICd1dWlkJztcblxuZXhwb3J0IGludGVyZmFjZSBTZXNzaW9uRGF0YSB7XG4gIHNlc3Npb25JZDogc3RyaW5nO1xuICB1c2VySWQ/OiBzdHJpbmc7XG4gIGd1ZXN0SWQ/OiBzdHJpbmc7XG4gIGV4cGlyZXNBdDogRGF0ZTtcbn1cblxuY29uc3QgU0VTU0lPTl9DT09LSUVfTkFNRSA9ICdhbHVkYV9zZXNzaW9uJztcbmNvbnN0IFNFU1NJT05fRFVSQVRJT05fREFZUyA9IDc7XG5cbi8qKlxuICogR2VuZXJhdGUgYSBuZXcgc2Vzc2lvbiBJRFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVTZXNzaW9uSWQoKTogc3RyaW5nIHtcbiAgcmV0dXJuIHV1aWR2NCgpO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhIG5ldyBzZXNzaW9uIGNvb2tpZVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2Vzc2lvbkNvb2tpZShzZXNzaW9uSWQ6IHN0cmluZywgdXNlcklkPzogc3RyaW5nLCBndWVzdElkPzogc3RyaW5nKTogdm9pZCB7XG4gIGNvbnN0IGV4cGlyZXNBdCA9IG5ldyBEYXRlKCk7XG4gIGV4cGlyZXNBdC5zZXREYXRlKGV4cGlyZXNBdC5nZXREYXRlKCkgKyBTRVNTSU9OX0RVUkFUSU9OX0RBWVMpO1xuICBcbiAgY29uc3QgY29va2llU3RvcmUgPSBjb29raWVzKCk7XG4gIGNvb2tpZVN0b3JlLnNldChTRVNTSU9OX0NPT0tJRV9OQU1FLCBKU09OLnN0cmluZ2lmeSh7XG4gICAgc2Vzc2lvbklkLFxuICAgIHVzZXJJZCxcbiAgICBndWVzdElkLFxuICAgIGV4cGlyZXNBdDogZXhwaXJlc0F0LnRvSVNPU3RyaW5nKCksXG4gIH0pLCB7XG4gICAgaHR0cE9ubHk6IHRydWUsXG4gICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nLFxuICAgIHNhbWVTaXRlOiAnbGF4JyxcbiAgICBleHBpcmVzOiBleHBpcmVzQXQsXG4gICAgcGF0aDogJy8nLFxuICB9KTtcbn1cblxuLyoqXG4gKiBHZXQgc2Vzc2lvbiBkYXRhIGZyb20gY29va2llXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTZXNzaW9uRnJvbUNvb2tpZSgpOiBTZXNzaW9uRGF0YSB8IG51bGwge1xuICB0cnkge1xuICAgIGNvbnN0IGNvb2tpZVN0b3JlID0gY29va2llcygpO1xuICAgIGNvbnN0IHNlc3Npb25Db29raWUgPSBjb29raWVTdG9yZS5nZXQoU0VTU0lPTl9DT09LSUVfTkFNRSk7XG4gICAgXG4gICAgaWYgKCFzZXNzaW9uQ29va2llPy52YWx1ZSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIFxuICAgIGNvbnN0IHNlc3Npb25EYXRhOiBTZXNzaW9uRGF0YSA9IEpTT04ucGFyc2Uoc2Vzc2lvbkNvb2tpZS52YWx1ZSk7XG4gICAgXG4gICAgLy8gQ2hlY2sgaWYgc2Vzc2lvbiBoYXMgZXhwaXJlZFxuICAgIGlmIChuZXcgRGF0ZShzZXNzaW9uRGF0YS5leHBpcmVzQXQpIDwgbmV3IERhdGUoKSkge1xuICAgICAgLy8gQ2xlYXIgZXhwaXJlZCBjb29raWVcbiAgICAgIGNvb2tpZVN0b3JlLmRlbGV0ZShTRVNTSU9OX0NPT0tJRV9OQU1FKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gc2Vzc2lvbkRhdGE7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgcGFyc2luZyBzZXNzaW9uIGNvb2tpZTonLCBlcnJvcik7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuLyoqXG4gKiBDbGVhciBzZXNzaW9uIGNvb2tpZVxuICovXG5leHBvcnQgZnVuY3Rpb24gY2xlYXJTZXNzaW9uQ29va2llKCk6IHZvaWQge1xuICBjb25zdCBjb29raWVTdG9yZSA9IGNvb2tpZXMoKTtcbiAgY29va2llU3RvcmUuZGVsZXRlKFNFU1NJT05fQ09PS0lFX05BTUUpO1xufVxuXG4vKipcbiAqIEdldCBvciBjcmVhdGUgYSBzZXNzaW9uIGZvciB0aGUgY3VycmVudCByZXF1ZXN0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRPckNyZWF0ZVNlc3Npb24oKTogU2Vzc2lvbkRhdGEge1xuICBsZXQgc2Vzc2lvbkRhdGEgPSBnZXRTZXNzaW9uRnJvbUNvb2tpZSgpO1xuICBcbiAgaWYgKCFzZXNzaW9uRGF0YSkge1xuICAgIC8vIENyZWF0ZSBuZXcgZ3Vlc3Qgc2Vzc2lvblxuICAgIGNvbnN0IHNlc3Npb25JZCA9IGdlbmVyYXRlU2Vzc2lvbklkKCk7XG4gICAgY29uc3QgZ3Vlc3RJZCA9IHV1aWR2NCgpO1xuICAgIFxuICAgIHNlc3Npb25EYXRhID0ge1xuICAgICAgc2Vzc2lvbklkLFxuICAgICAgZ3Vlc3RJZCxcbiAgICAgIGV4cGlyZXNBdDogbmV3IERhdGUoRGF0ZS5ub3coKSArIFNFU1NJT05fRFVSQVRJT05fREFZUyAqIDI0ICogNjAgKiA2MCAqIDEwMDApLFxuICAgIH07XG4gICAgXG4gICAgY3JlYXRlU2Vzc2lvbkNvb2tpZShzZXNzaW9uSWQsIHVuZGVmaW5lZCwgZ3Vlc3RJZCk7XG4gIH1cbiAgXG4gIHJldHVybiBzZXNzaW9uRGF0YTtcbn1cblxuLyoqXG4gKiBVcGRhdGUgc2Vzc2lvbiB3aXRoIHVzZXIgSUQgYWZ0ZXIgYXV0aGVudGljYXRpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVNlc3Npb25XaXRoVXNlcihzZXNzaW9uSWQ6IHN0cmluZywgdXNlcklkOiBzdHJpbmcpOiB2b2lkIHtcbiAgY29uc3Qgc2Vzc2lvbkRhdGEgPSBnZXRTZXNzaW9uRnJvbUNvb2tpZSgpO1xuICBcbiAgaWYgKHNlc3Npb25EYXRhICYmIHNlc3Npb25EYXRhLnNlc3Npb25JZCA9PT0gc2Vzc2lvbklkKSB7XG4gICAgY3JlYXRlU2Vzc2lvbkNvb2tpZShzZXNzaW9uSWQsIHVzZXJJZCwgc2Vzc2lvbkRhdGEuZ3Vlc3RJZCk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJjb29raWVzIiwidjQiLCJ1dWlkdjQiLCJTRVNTSU9OX0NPT0tJRV9OQU1FIiwiU0VTU0lPTl9EVVJBVElPTl9EQVlTIiwiZ2VuZXJhdGVTZXNzaW9uSWQiLCJjcmVhdGVTZXNzaW9uQ29va2llIiwic2Vzc2lvbklkIiwidXNlcklkIiwiZ3Vlc3RJZCIsImV4cGlyZXNBdCIsIkRhdGUiLCJzZXREYXRlIiwiZ2V0RGF0ZSIsImNvb2tpZVN0b3JlIiwic2V0IiwiSlNPTiIsInN0cmluZ2lmeSIsInRvSVNPU3RyaW5nIiwiaHR0cE9ubHkiLCJzZWN1cmUiLCJwcm9jZXNzIiwic2FtZVNpdGUiLCJleHBpcmVzIiwicGF0aCIsImdldFNlc3Npb25Gcm9tQ29va2llIiwic2Vzc2lvbkNvb2tpZSIsImdldCIsInZhbHVlIiwic2Vzc2lvbkRhdGEiLCJwYXJzZSIsImRlbGV0ZSIsImVycm9yIiwiY29uc29sZSIsImNsZWFyU2Vzc2lvbkNvb2tpZSIsImdldE9yQ3JlYXRlU2Vzc2lvbiIsIm5vdyIsInVuZGVmaW5lZCIsInVwZGF0ZVNlc3Npb25XaXRoVXNlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/session.ts\n");

/***/ }),

/***/ "(rsc)/./lib/tokens.ts":
/*!***********************!*\
  !*** ./lib/tokens.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addUsage: () => (/* binding */ addUsage),\n/* harmony export */   canConsume: () => (/* binding */ canConsume),\n/* harmony export */   getLimits: () => (/* binding */ getLimits),\n/* harmony export */   getPeriodKeys: () => (/* binding */ getPeriodKeys),\n/* harmony export */   getUsage: () => (/* binding */ getUsage)\n/* harmony export */ });\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./lib/prisma.ts\");\n\nfunction getPeriodKeys(date = new Date()) {\n    const day = date.toISOString().slice(0, 10) // YYYY-MM-DD\n    ;\n    const month = date.toISOString().slice(0, 7) // YYYY-MM\n    ;\n    return {\n        day,\n        month\n    };\n}\nfunction getLimits(actor) {\n    if (actor.type === \"guest\") {\n        return {\n            daily: 300,\n            monthly: 2000\n        };\n    }\n    if (actor.plan === \"PREMIUM\") {\n        return {\n            daily: 5000,\n            monthly: 60000\n        };\n    }\n    return {\n        daily: 1500,\n        monthly: 12000\n    };\n}\nasync function getUsage(actor) {\n    const { day, month } = getPeriodKeys();\n    const [daily, monthly] = await Promise.all([\n        _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.tokenUsage.findUnique({\n            where: {\n                actorType_actorId_period_periodKey: {\n                    actorType: actor.type,\n                    actorId: actor.id,\n                    period: \"day\",\n                    periodKey: day\n                }\n            }\n        }),\n        _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.tokenUsage.findUnique({\n            where: {\n                actorType_actorId_period_periodKey: {\n                    actorType: actor.type,\n                    actorId: actor.id,\n                    period: \"month\",\n                    periodKey: month\n                }\n            }\n        })\n    ]);\n    return {\n        daily: daily?.tokens ?? 0,\n        monthly: monthly?.tokens ?? 0\n    };\n}\nasync function addUsage(actor, tokens) {\n    const { day, month } = getPeriodKeys();\n    await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.$transaction([\n        _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.tokenUsage.upsert({\n            where: {\n                actorType_actorId_period_periodKey: {\n                    actorType: actor.type,\n                    actorId: actor.id,\n                    period: \"day\",\n                    periodKey: day\n                }\n            },\n            update: {\n                tokens: {\n                    increment: tokens\n                }\n            },\n            create: {\n                actorType: actor.type,\n                actorId: actor.id,\n                period: \"day\",\n                periodKey: day,\n                tokens\n            }\n        }),\n        _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.tokenUsage.upsert({\n            where: {\n                actorType_actorId_period_periodKey: {\n                    actorType: actor.type,\n                    actorId: actor.id,\n                    period: \"month\",\n                    periodKey: month\n                }\n            },\n            update: {\n                tokens: {\n                    increment: tokens\n                }\n            },\n            create: {\n                actorType: actor.type,\n                actorId: actor.id,\n                period: \"month\",\n                periodKey: month,\n                tokens\n            }\n        })\n    ]);\n}\nasync function canConsume(actor, tokens) {\n    const limits = getLimits(actor);\n    const usage = await getUsage(actor);\n    return {\n        allowed: usage.daily + tokens <= limits.daily && usage.monthly + tokens <= limits.monthly,\n        usage,\n        limits\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvdG9rZW5zLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFxQztBQU05QixTQUFTQyxjQUFjQyxPQUFPLElBQUlDLE1BQU07SUFDN0MsTUFBTUMsTUFBTUYsS0FBS0csV0FBVyxHQUFHQyxLQUFLLENBQUMsR0FBRyxJQUFJLGFBQWE7O0lBQ3pELE1BQU1DLFFBQVFMLEtBQUtHLFdBQVcsR0FBR0MsS0FBSyxDQUFDLEdBQUcsR0FBRyxVQUFVOztJQUN2RCxPQUFPO1FBQUVGO1FBQUtHO0lBQU07QUFDdEI7QUFFTyxTQUFTQyxVQUFVQyxLQUFZO0lBQ3BDLElBQUlBLE1BQU1DLElBQUksS0FBSyxTQUFTO1FBQzFCLE9BQU87WUFBRUMsT0FBTztZQUFLQyxTQUFTO1FBQUs7SUFDckM7SUFDQSxJQUFJSCxNQUFNSSxJQUFJLEtBQUssV0FBVztRQUM1QixPQUFPO1lBQUVGLE9BQU87WUFBTUMsU0FBUztRQUFNO0lBQ3ZDO0lBQ0EsT0FBTztRQUFFRCxPQUFPO1FBQU1DLFNBQVM7SUFBTTtBQUN2QztBQUVPLGVBQWVFLFNBQVNMLEtBQVk7SUFDekMsTUFBTSxFQUFFTCxHQUFHLEVBQUVHLEtBQUssRUFBRSxHQUFHTjtJQUN2QixNQUFNLENBQUNVLE9BQU9DLFFBQVEsR0FBRyxNQUFNRyxRQUFRQyxHQUFHLENBQUM7UUFDekNoQiwrQ0FBTUEsQ0FBQ2lCLFVBQVUsQ0FBQ0MsVUFBVSxDQUFDO1lBQzNCQyxPQUFPO2dCQUNMQyxvQ0FBb0M7b0JBQ2xDQyxXQUFXWixNQUFNQyxJQUFJO29CQUNyQlksU0FBU2IsTUFBTWMsRUFBRTtvQkFDakJDLFFBQVE7b0JBQ1JDLFdBQVdyQjtnQkFDYjtZQUNGO1FBQ0Y7UUFDQUosK0NBQU1BLENBQUNpQixVQUFVLENBQUNDLFVBQVUsQ0FBQztZQUMzQkMsT0FBTztnQkFDTEMsb0NBQW9DO29CQUNsQ0MsV0FBV1osTUFBTUMsSUFBSTtvQkFDckJZLFNBQVNiLE1BQU1jLEVBQUU7b0JBQ2pCQyxRQUFRO29CQUNSQyxXQUFXbEI7Z0JBQ2I7WUFDRjtRQUNGO0tBQ0Q7SUFDRCxPQUFPO1FBQUVJLE9BQU9BLE9BQU9lLFVBQVU7UUFBR2QsU0FBU0EsU0FBU2MsVUFBVTtJQUFFO0FBQ3BFO0FBRU8sZUFBZUMsU0FBU2xCLEtBQVksRUFBRWlCLE1BQWM7SUFDekQsTUFBTSxFQUFFdEIsR0FBRyxFQUFFRyxLQUFLLEVBQUUsR0FBR047SUFDdkIsTUFBTUQsK0NBQU1BLENBQUM0QixZQUFZLENBQUM7UUFDeEI1QiwrQ0FBTUEsQ0FBQ2lCLFVBQVUsQ0FBQ1ksTUFBTSxDQUFDO1lBQ3ZCVixPQUFPO2dCQUNMQyxvQ0FBb0M7b0JBQ2xDQyxXQUFXWixNQUFNQyxJQUFJO29CQUNyQlksU0FBU2IsTUFBTWMsRUFBRTtvQkFDakJDLFFBQVE7b0JBQ1JDLFdBQVdyQjtnQkFDYjtZQUNGO1lBQ0EwQixRQUFRO2dCQUFFSixRQUFRO29CQUFFSyxXQUFXTDtnQkFBTztZQUFFO1lBQ3hDTSxRQUFRO2dCQUNOWCxXQUFXWixNQUFNQyxJQUFJO2dCQUNyQlksU0FBU2IsTUFBTWMsRUFBRTtnQkFDakJDLFFBQVE7Z0JBQ1JDLFdBQVdyQjtnQkFDWHNCO1lBQ0Y7UUFDRjtRQUNBMUIsK0NBQU1BLENBQUNpQixVQUFVLENBQUNZLE1BQU0sQ0FBQztZQUN2QlYsT0FBTztnQkFDTEMsb0NBQW9DO29CQUNsQ0MsV0FBV1osTUFBTUMsSUFBSTtvQkFDckJZLFNBQVNiLE1BQU1jLEVBQUU7b0JBQ2pCQyxRQUFRO29CQUNSQyxXQUFXbEI7Z0JBQ2I7WUFDRjtZQUNBdUIsUUFBUTtnQkFBRUosUUFBUTtvQkFBRUssV0FBV0w7Z0JBQU87WUFBRTtZQUN4Q00sUUFBUTtnQkFDTlgsV0FBV1osTUFBTUMsSUFBSTtnQkFDckJZLFNBQVNiLE1BQU1jLEVBQUU7Z0JBQ2pCQyxRQUFRO2dCQUNSQyxXQUFXbEI7Z0JBQ1htQjtZQUNGO1FBQ0Y7S0FDRDtBQUNIO0FBRU8sZUFBZU8sV0FBV3hCLEtBQVksRUFBRWlCLE1BQWM7SUFDM0QsTUFBTVEsU0FBUzFCLFVBQVVDO0lBQ3pCLE1BQU0wQixRQUFRLE1BQU1yQixTQUFTTDtJQUM3QixPQUFPO1FBQ0wyQixTQUFTRCxNQUFNeEIsS0FBSyxHQUFHZSxVQUFVUSxPQUFPdkIsS0FBSyxJQUFJd0IsTUFBTXZCLE9BQU8sR0FBR2MsVUFBVVEsT0FBT3RCLE9BQU87UUFDekZ1QjtRQUNBRDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbHVkYS1haS8uL2xpYi90b2tlbnMudHM/MTdjOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwcmlzbWEgfSBmcm9tICdAL2xpYi9wcmlzbWEnXG5cbmV4cG9ydCB0eXBlIEFjdG9yID1cbiAgfCB7IHR5cGU6ICdndWVzdCc7IGlkOiBzdHJpbmcgfVxuICB8IHsgdHlwZTogJ3VzZXInOyBpZDogc3RyaW5nOyBwbGFuPzogJ1VTRVInIHwgJ1BSRU1JVU0nIH1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFBlcmlvZEtleXMoZGF0ZSA9IG5ldyBEYXRlKCkpIHtcbiAgY29uc3QgZGF5ID0gZGF0ZS50b0lTT1N0cmluZygpLnNsaWNlKDAsIDEwKSAvLyBZWVlZLU1NLUREXG4gIGNvbnN0IG1vbnRoID0gZGF0ZS50b0lTT1N0cmluZygpLnNsaWNlKDAsIDcpIC8vIFlZWVktTU1cbiAgcmV0dXJuIHsgZGF5LCBtb250aCB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRMaW1pdHMoYWN0b3I6IEFjdG9yKSB7XG4gIGlmIChhY3Rvci50eXBlID09PSAnZ3Vlc3QnKSB7XG4gICAgcmV0dXJuIHsgZGFpbHk6IDMwMCwgbW9udGhseTogMjAwMCB9XG4gIH1cbiAgaWYgKGFjdG9yLnBsYW4gPT09ICdQUkVNSVVNJykge1xuICAgIHJldHVybiB7IGRhaWx5OiA1MDAwLCBtb250aGx5OiA2MDAwMCB9XG4gIH1cbiAgcmV0dXJuIHsgZGFpbHk6IDE1MDAsIG1vbnRobHk6IDEyMDAwIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFVzYWdlKGFjdG9yOiBBY3Rvcikge1xuICBjb25zdCB7IGRheSwgbW9udGggfSA9IGdldFBlcmlvZEtleXMoKVxuICBjb25zdCBbZGFpbHksIG1vbnRobHldID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgIHByaXNtYS50b2tlblVzYWdlLmZpbmRVbmlxdWUoe1xuICAgICAgd2hlcmU6IHtcbiAgICAgICAgYWN0b3JUeXBlX2FjdG9ySWRfcGVyaW9kX3BlcmlvZEtleToge1xuICAgICAgICAgIGFjdG9yVHlwZTogYWN0b3IudHlwZSxcbiAgICAgICAgICBhY3RvcklkOiBhY3Rvci5pZCxcbiAgICAgICAgICBwZXJpb2Q6ICdkYXknLFxuICAgICAgICAgIHBlcmlvZEtleTogZGF5LFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9KSxcbiAgICBwcmlzbWEudG9rZW5Vc2FnZS5maW5kVW5pcXVlKHtcbiAgICAgIHdoZXJlOiB7XG4gICAgICAgIGFjdG9yVHlwZV9hY3RvcklkX3BlcmlvZF9wZXJpb2RLZXk6IHtcbiAgICAgICAgICBhY3RvclR5cGU6IGFjdG9yLnR5cGUsXG4gICAgICAgICAgYWN0b3JJZDogYWN0b3IuaWQsXG4gICAgICAgICAgcGVyaW9kOiAnbW9udGgnLFxuICAgICAgICAgIHBlcmlvZEtleTogbW9udGgsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0pLFxuICBdKVxuICByZXR1cm4geyBkYWlseTogZGFpbHk/LnRva2VucyA/PyAwLCBtb250aGx5OiBtb250aGx5Py50b2tlbnMgPz8gMCB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhZGRVc2FnZShhY3RvcjogQWN0b3IsIHRva2VuczogbnVtYmVyKSB7XG4gIGNvbnN0IHsgZGF5LCBtb250aCB9ID0gZ2V0UGVyaW9kS2V5cygpXG4gIGF3YWl0IHByaXNtYS4kdHJhbnNhY3Rpb24oW1xuICAgIHByaXNtYS50b2tlblVzYWdlLnVwc2VydCh7XG4gICAgICB3aGVyZToge1xuICAgICAgICBhY3RvclR5cGVfYWN0b3JJZF9wZXJpb2RfcGVyaW9kS2V5OiB7XG4gICAgICAgICAgYWN0b3JUeXBlOiBhY3Rvci50eXBlLFxuICAgICAgICAgIGFjdG9ySWQ6IGFjdG9yLmlkLFxuICAgICAgICAgIHBlcmlvZDogJ2RheScsXG4gICAgICAgICAgcGVyaW9kS2V5OiBkYXksXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgdXBkYXRlOiB7IHRva2VuczogeyBpbmNyZW1lbnQ6IHRva2VucyB9IH0sXG4gICAgICBjcmVhdGU6IHtcbiAgICAgICAgYWN0b3JUeXBlOiBhY3Rvci50eXBlLFxuICAgICAgICBhY3RvcklkOiBhY3Rvci5pZCxcbiAgICAgICAgcGVyaW9kOiAnZGF5JyxcbiAgICAgICAgcGVyaW9kS2V5OiBkYXksXG4gICAgICAgIHRva2VucyxcbiAgICAgIH0sXG4gICAgfSksXG4gICAgcHJpc21hLnRva2VuVXNhZ2UudXBzZXJ0KHtcbiAgICAgIHdoZXJlOiB7XG4gICAgICAgIGFjdG9yVHlwZV9hY3RvcklkX3BlcmlvZF9wZXJpb2RLZXk6IHtcbiAgICAgICAgICBhY3RvclR5cGU6IGFjdG9yLnR5cGUsXG4gICAgICAgICAgYWN0b3JJZDogYWN0b3IuaWQsXG4gICAgICAgICAgcGVyaW9kOiAnbW9udGgnLFxuICAgICAgICAgIHBlcmlvZEtleTogbW9udGgsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgdXBkYXRlOiB7IHRva2VuczogeyBpbmNyZW1lbnQ6IHRva2VucyB9IH0sXG4gICAgICBjcmVhdGU6IHtcbiAgICAgICAgYWN0b3JUeXBlOiBhY3Rvci50eXBlLFxuICAgICAgICBhY3RvcklkOiBhY3Rvci5pZCxcbiAgICAgICAgcGVyaW9kOiAnbW9udGgnLFxuICAgICAgICBwZXJpb2RLZXk6IG1vbnRoLFxuICAgICAgICB0b2tlbnMsXG4gICAgICB9LFxuICAgIH0pLFxuICBdKVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY2FuQ29uc3VtZShhY3RvcjogQWN0b3IsIHRva2VuczogbnVtYmVyKSB7XG4gIGNvbnN0IGxpbWl0cyA9IGdldExpbWl0cyhhY3RvcilcbiAgY29uc3QgdXNhZ2UgPSBhd2FpdCBnZXRVc2FnZShhY3RvcilcbiAgcmV0dXJuIHtcbiAgICBhbGxvd2VkOiB1c2FnZS5kYWlseSArIHRva2VucyA8PSBsaW1pdHMuZGFpbHkgJiYgdXNhZ2UubW9udGhseSArIHRva2VucyA8PSBsaW1pdHMubW9udGhseSxcbiAgICB1c2FnZSxcbiAgICBsaW1pdHMsXG4gIH1cbn1cblxuXG4iXSwibmFtZXMiOlsicHJpc21hIiwiZ2V0UGVyaW9kS2V5cyIsImRhdGUiLCJEYXRlIiwiZGF5IiwidG9JU09TdHJpbmciLCJzbGljZSIsIm1vbnRoIiwiZ2V0TGltaXRzIiwiYWN0b3IiLCJ0eXBlIiwiZGFpbHkiLCJtb250aGx5IiwicGxhbiIsImdldFVzYWdlIiwiUHJvbWlzZSIsImFsbCIsInRva2VuVXNhZ2UiLCJmaW5kVW5pcXVlIiwid2hlcmUiLCJhY3RvclR5cGVfYWN0b3JJZF9wZXJpb2RfcGVyaW9kS2V5IiwiYWN0b3JUeXBlIiwiYWN0b3JJZCIsImlkIiwicGVyaW9kIiwicGVyaW9kS2V5IiwidG9rZW5zIiwiYWRkVXNhZ2UiLCIkdHJhbnNhY3Rpb24iLCJ1cHNlcnQiLCJ1cGRhdGUiLCJpbmNyZW1lbnQiLCJjcmVhdGUiLCJjYW5Db25zdW1lIiwibGltaXRzIiwidXNhZ2UiLCJhbGxvd2VkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/tokens.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/next-auth","vendor-chunks/@babel","vendor-chunks/jose","vendor-chunks/openid-client","vendor-chunks/uuid","vendor-chunks/oauth","vendor-chunks/@panva","vendor-chunks/yallist","vendor-chunks/preact-render-to-string","vendor-chunks/bcryptjs","vendor-chunks/@auth","vendor-chunks/preact","vendor-chunks/oidc-token-hash","vendor-chunks/cookie"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=%2FUsers%2Fjincho%2FDocuments%2FAluda%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjincho%2FDocuments%2FAluda&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();